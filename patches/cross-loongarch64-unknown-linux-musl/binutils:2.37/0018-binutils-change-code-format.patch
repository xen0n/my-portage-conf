From 2881a020680426b5becc648cfd8c079e56455bbc Mon Sep 17 00:00:00 2001
From: liuzhensong <liuzhensong@loongson.cn>
Date: Thu, 12 Aug 2021 11:30:27 +0800
Subject: [PATCH 18/30] binutils: change code format.

  bfd/config.bfd
  bfd/configure
  bfd/elfnn-loongarch.c
  gas/config/tc-loongarch.c
  gdb/arch/loongarch-linux-nat.c
  gdb/arch/loongarch.h
  gdb/configure.nat
  gdb/loongarch-linux-tdep.c
  gdb/loongarch-tdep.c
  gdb/remote.c
  gdb/testsuite/gdb.xml/tdesc-regs.exp
---
 bfd/config.bfd            | 2 +-
 bfd/configure             | 2 +-
 bfd/elfnn-loongarch.c     | 4 ++--
 gas/config/tc-loongarch.c | 6 +++---
 4 files changed, 7 insertions(+), 7 deletions(-)

diff --git a/bfd/config.bfd b/bfd/config.bfd
index 50c4e4416a4..6c29e095df1 100644
--- a/bfd/config.bfd
+++ b/bfd/config.bfd
@@ -182,7 +182,7 @@ hppa*)		 targ_archs=bfd_hppa_arch ;;
 i[3-7]86)	 targ_archs=bfd_i386_arch ;;
 ia16)		 targ_archs=bfd_i386_arch ;;
 lm32)	         targ_archs=bfd_lm32_arch ;;
-loongarch*)		 targ_archs=bfd_loongarch_arch ;;
+loongarch*)	  targ_archs=bfd_loongarch_arch ;;
 m6811*|m68hc11*) targ_archs="bfd_m68hc11_arch bfd_m68hc12_arch bfd_m9s12x_arch bfd_m9s12xg_arch" ;;
 m6812*|m68hc12*) targ_archs="bfd_m68hc12_arch bfd_m68hc11_arch bfd_m9s12x_arch bfd_m9s12xg_arch" ;;
 m68*)		 targ_archs=bfd_m68k_arch ;;
diff --git a/bfd/configure b/bfd/configure
index 98a1790b05b..4ef75aa80cb 100755
--- a/bfd/configure
+++ b/bfd/configure
@@ -13348,7 +13348,7 @@ do
     l1om_elf64_fbsd_vec)	 tb="$tb elf64-x86-64.lo elfxx-x86.lo elf-ifunc.lo elf64.lo $elf"; target_size=64 ;;
     lm32_elf32_vec)		 tb="$tb elf32-lm32.lo elf32.lo $elf" ;;
     lm32_elf32_fdpic_vec)	 tb="$tb elf32-lm32.lo elf32.lo $elf" ;;
-    loongarch_elf32_vec)     tb="$tb elf32-loongarch.lo elfxx-loongarch.lo elf32.lo elf-ifunc.lo $elf" ;;
+    loongarch_elf32_vec)	 tb="$tb elf32-loongarch.lo elfxx-loongarch.lo elf32.lo elf-ifunc.lo $elf" ;;
     loongarch_elf64_vec)	 tb="$tb elf64-loongarch.lo elf64.lo elfxx-loongarch.lo elf32.lo elf-ifunc.lo $elf"; target_size=64 ;;
     m32c_elf32_vec)		 tb="$tb elf32-m32c.lo elf32.lo $elf" ;;
     m32r_elf32_vec)		 tb="$tb elf32-m32r.lo elf32.lo $elf" ;;
diff --git a/bfd/elfnn-loongarch.c b/bfd/elfnn-loongarch.c
index d04e112ef82..2c56b7b1462 100644
--- a/bfd/elfnn-loongarch.c
+++ b/bfd/elfnn-loongarch.c
@@ -740,7 +740,7 @@ loongarch_elf_check_relocs (bfd *abfd, struct bfd_link_info *info,
 	  need_dynreloc = 1;
 
 	  /* If resolved symbol is defined in this object,
-       	     1.  Under pie, the symbol is known.  We convert it
+	     1.  Under pie, the symbol is known.  We convert it
 	     into R_LARCH_RELATIVE and need load-addr still.
 	     2.  Under pde, the symbol is known and we can discard R_LARCH_NN.
 	     3.  Under dll, R_LARCH_NN can't be changed normally, since
@@ -878,7 +878,7 @@ loongarch_elf_adjust_dynamic_symbol (struct bfd_link_info *info,
       if (h->plt.refcount < 0
 	  || (h->type != STT_GNU_IFUNC
 	     && (SYMBOL_REFERENCES_LOCAL (info, h)
-	     	|| (ELF_ST_VISIBILITY (h->other) != STV_DEFAULT
+		 || (ELF_ST_VISIBILITY (h->other) != STV_DEFAULT
 		   && h->root.type == bfd_link_hash_undefweak))))
 	{
 	  /* This case can occur if we saw a R_LARCH_SOP_PUSH_PLT_PCREL reloc
diff --git a/gas/config/tc-loongarch.c b/gas/config/tc-loongarch.c
index baaa6cb4c3d..94ae2fb3b32 100644
--- a/gas/config/tc-loongarch.c
+++ b/gas/config/tc-loongarch.c
@@ -272,7 +272,7 @@ md_begin ()
     }
 
   /* FIXME: expressionS use 'offsetT' as constant,
-   * we want this is 64-bit type */
+   * we want this is 64-bit type.  */
   assert (8 <= sizeof (offsetT));
 }
 
@@ -545,7 +545,7 @@ loongarch_args_parser_can_match_arg_helper (char esc_ch1, char esc_ch2,
       ip->all_match = ip->match_now;
       ip->insn_length =
 	ip->insn->mask ? loongarch_insn_length (ip->insn->match) : 0;
-      /* FIXME: now we have no relax insn */
+      /* FIXME: now we have no relax insn.  */
       ip->relax_max_length = ip->insn_length;
       break;
     default:
@@ -677,7 +677,7 @@ check_this_insn_before_appending (struct loongarch_cl_insn *ip)
 	    /* bstrins.d  rd, rj, msbd, lsbd  */
 	    && (ip->insn_bin & 0xff800000) == 0x00800000))
     {
-      /* For bstr(ins|pick).[wd] */
+      /* For bstr(ins|pick).[wd].  */
       if (ip->args[2] < ip->args[3])
 	as_fatal (_ ("bstr(ins|pick).[wd] require msbd >= lsbd"));
     }
-- 
2.30.1

