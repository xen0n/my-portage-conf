From 221dce2aaabf68987de78fd2476a609a48d153e8 Mon Sep 17 00:00:00 2001
From: caiyinyu <caiyinyu@loongson.cn>
Date: Fri, 6 Aug 2021 14:58:16 +0800
Subject: [PATCH 23/27] LoongArch: Rename macro REG_*** to LARCH_REG_***

        * sysdeps/unix/sysv/linux/loongarch/makecontext.c: Rename macro REG_***.
        * sysdeps/unix/sysv/linux/loongarch/sys/ucontext.h: Likewise.
---
 .../unix/sysv/linux/loongarch/makecontext.c   | 28 +++++++++----------
 .../unix/sysv/linux/loongarch/sys/ucontext.h  | 19 ++++++-------
 2 files changed, 23 insertions(+), 24 deletions(-)

diff --git a/sysdeps/unix/sysv/linux/loongarch/makecontext.c b/sysdeps/unix/sysv/linux/loongarch/makecontext.c
index ee6f9b5657..55d509ab15 100644
--- a/sysdeps/unix/sysv/linux/loongarch/makecontext.c
+++ b/sysdeps/unix/sysv/linux/loongarch/makecontext.c
@@ -30,7 +30,7 @@ __makecontext (ucontext_t *ucp, void (*func) (void), int argc,
   extern void __start_context (void) attribute_hidden;
   long int i, sp;
 
-  _Static_assert (REG_NARGS == 8, "__makecontext assumes 8 argument registers");
+  _Static_assert (LARCH_REG_NARGS == 8, "__makecontext assumes 8 argument registers");
 
   /* Set up the stack.  */
   sp = ((long int) ucp->uc_stack.ss_sp + ucp->uc_stack.ss_size) & ALMASK;
@@ -39,34 +39,34 @@ __makecontext (ucontext_t *ucp, void (*func) (void), int argc,
      ra = s0 = 0, terminating the stack for backtracing purposes.
      s1 = the function we must call.
      s2 = the subsequent context to run.  */
-  ucp->uc_mcontext.__gregs[REG_RA] = 0;
-  ucp->uc_mcontext.__gregs[REG_S0] = 0;
-  ucp->uc_mcontext.__gregs[REG_S1] = (long int) func;
-  ucp->uc_mcontext.__gregs[REG_S2] = (long int) ucp->uc_link;
-  ucp->uc_mcontext.__gregs[REG_SP] = sp;
+  ucp->uc_mcontext.__gregs[LARCH_REG_RA] = 0;
+  ucp->uc_mcontext.__gregs[LARCH_REG_S0] = 0;
+  ucp->uc_mcontext.__gregs[LARCH_REG_S1] = (long int) func;
+  ucp->uc_mcontext.__gregs[LARCH_REG_S2] = (long int) ucp->uc_link;
+  ucp->uc_mcontext.__gregs[LARCH_REG_SP] = sp;
   ucp->uc_mcontext.__pc = (long int) &__start_context;
 
   /* Put args in a0-a7, then put any remaining args on the stack.  */
-  ucp->uc_mcontext.__gregs[REG_A0 + 0] = a0;
-  ucp->uc_mcontext.__gregs[REG_A0 + 1] = a1;
-  ucp->uc_mcontext.__gregs[REG_A0 + 2] = a2;
-  ucp->uc_mcontext.__gregs[REG_A0 + 3] = a3;
-  ucp->uc_mcontext.__gregs[REG_A0 + 4] = a4;
+  ucp->uc_mcontext.__gregs[LARCH_REG_A0 + 0] = a0;
+  ucp->uc_mcontext.__gregs[LARCH_REG_A0 + 1] = a1;
+  ucp->uc_mcontext.__gregs[LARCH_REG_A0 + 2] = a2;
+  ucp->uc_mcontext.__gregs[LARCH_REG_A0 + 3] = a3;
+  ucp->uc_mcontext.__gregs[LARCH_REG_A0 + 4] = a4;
 
   if (__glibc_unlikely (argc > 5))
     {
       va_list vl;
       va_start (vl, a4);
 
-      long reg_args = argc < REG_NARGS ? argc : REG_NARGS;
+      long reg_args = argc < LARCH_REG_NARGS ? argc : LARCH_REG_NARGS;
       for (i = 5; i < reg_args; i++)
-        ucp->uc_mcontext.__gregs[REG_A0 + i] = va_arg (vl, long);
+        ucp->uc_mcontext.__gregs[LARCH_REG_A0 + i] = va_arg (vl, long);
 
       long int stack_args = argc - reg_args;
       if (stack_args > 0)
 	{
 	  sp = (sp - stack_args * sizeof (long int)) & ALMASK;
-	  ucp->uc_mcontext.__gregs[REG_SP] = sp;
+	  ucp->uc_mcontext.__gregs[LARCH_REG_SP] = sp;
 	  for (i = 0; i < stack_args; i++)
 	    ((long int *) sp)[i] = va_arg (vl, long int);
 	}
diff --git a/sysdeps/unix/sysv/linux/loongarch/sys/ucontext.h b/sysdeps/unix/sysv/linux/loongarch/sys/ucontext.h
index b122f2d87e..00e3772357 100644
--- a/sysdeps/unix/sysv/linux/loongarch/sys/ucontext.h
+++ b/sysdeps/unix/sysv/linux/loongarch/sys/ucontext.h
@@ -29,16 +29,15 @@
 typedef unsigned long int __loongarch_mc_gp_state[32];
 
 #ifdef __USE_MISC
-# define NGREG	32
-
-# define REG_RA 1
-# define REG_SP 3
-# define REG_TP 21
-# define REG_S0 23
-# define REG_S1 24
-# define REG_A0 4
-# define REG_S2 25
-# define REG_NARGS 8
+# define LARCH_NGREG	32
+
+# define LARCH_REG_RA 1
+# define LARCH_REG_SP 3
+# define LARCH_REG_S0 23
+# define LARCH_REG_S1 24
+# define LARCH_REG_A0 4
+# define LARCH_REG_S2 25
+# define LARCH_REG_NARGS 8
 
 typedef unsigned long int greg_t;
 
-- 
2.30.1

